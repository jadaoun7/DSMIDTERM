@page
@using DSMIDTERM.Pages;
@model IndexModel
@{
    ViewData["Title"] = "New Title";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h1 class="text-center mb-4">New Title</h1>

        <div class="row">
            <div class="col-md-8 offset-md-2">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Product List</h3>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <button id="loadProductsBtn" class="btn btn-primary">Load Products</button>
                        </div>
                        <table id="productsTable" class="table table-striped" style="display:none;">
                            <thead>
                                <tr>
                                    <th>ID</th>
                                    <th>Name</th>
                                    <th>Price</th>
                                </tr>
                            </thead>
                            <tbody id="productsTableBody">
                                <!-- Products will be dynamically loaded here -->
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="card mt-4">
                    <div class="card-header">
                        <h3 class="card-title">Add New Product</h3>
                    </div>
                    <div class="card-body">
                        <form id="addProductForm">
                            <div class="mb-3">
                                <label for="productName" class="form-label">Product Name</label>
                                <input type="text" class="form-control" id="productName" required>
                            </div>
                            <div class="mb-3">
                                <label for="productPrice" class="form-label">Product Price</label>
                                <input type="number" class="form-control" id="productPrice" step="0.01" required>
                            </div>
                            <button type="submit" class="btn btn-success">Add Product</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.getElementById('loadProductsBtn').addEventListener('click', async () => {
            try {
                const response = await fetch('/api/Products');
                const products = await response.json();
                const tableBody = document.getElementById('productsTableBody');
                const productsTable = document.getElementById('productsTable');

                // Clear previous data
                tableBody.innerHTML = '';

                // Populate table
                products.forEach(product => {
                    const row = `
                                <tr>
                                    <td>${product.id}</td>
                                    <td>${product.name}</td>
                                    <td>$${product.price.toFixed(2)}</td>
                                </tr>
                            `;
                    tableBody.innerHTML += row;
                });

                // Show the table
                productsTable.style.display = 'table';
            } catch (error) {
                console.error('Error fetching products:', error);
                alert('Failed to load products');
            }
        });

        document.getElementById('addProductForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const name = document.getElementById('productName').value;
            const price = document.getElementById('productPrice').value;

            try {
                const response = await fetch('/api/Products', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ name, price: parseFloat(price) })
                });

                if (response.ok) {
                    alert('Product added successfully!');
                    document.getElementById('loadProductsBtn').click(); // Refresh products
                    // Reset form
                    document.getElementById('productName').value = '';
                    document.getElementById('productPrice').value = '';
                } else {
                    alert('Failed to add product');
                }
            } catch (error) {
                console.error('Error adding product:', error);
                alert('Failed to add product');
            }
        });
    </script>
</body>
</html>
